/*
 * File: app.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

//@require @packageOverrides
Ext.Loader.setConfig({

});

Ext.application({
    models: [
        'Band'
    ],
    stores: [
        'Bands'
    ],
    views: [
        'Main',
        'BandList',
        'BandDetail'
    ],
    name: 'MyApp',

    setDragInteraction: function(component) {
        var dragObj = {
            direction: 'horizontal',
            constraint: {
                min: {x: 0, y: 0},
                // allows us to drag the entire width of the view
                max: {x: window.innerWidth, y: 0}
            },
            listeners: {
                dragend: function(draggable) {
                    // if the user has dragged more than half the width of the 
                    // screen, set the offset to width of the screen and hide the view.
                    if(draggable.offset.x > window.innerWidth / 2) {

                        Ext.ComponentQuery.query('#backButton')[0].hide();
                        Ext.ComponentQuery.query('#toolbar')[0].setTitle('Krautrock');


                        // setOffset takes X, Y, and an animation object
                        draggable.setOffset(window.innerWidth, 0, {
                            type: 'slide',
                            duration: 200
                        });

                        // using setTimeout here to allow the animation to finish,
                        // then hide the component and set setOffset back to 0
                        setTimeout(function() {
                            component.setHidden(true);
                            draggable.setOffset(0,0);
                        }, 300);
                    }

                    // User didn't drag far enough so snap back.
                    else {

                        draggable.setOffset(0, 0, {
                            type: 'slide',
                            duration: 200
                        });
                    }
                },
                // Extra credit: set the size of the shadow to decrease when the user
                // drags closer to the right.
                drag: function(drag) {

                    //console.log(shadowWidth);
                    //component.setStyle('box-shadow: -10px 0px 50px #666;');
                }
            }
        };

        //console.log(component.getWidth());
        component.setDraggable(dragObj);
    },

    launch: function() {

        Ext.create('MyApp.view.Main', {fullscreen: true});
    }

});
